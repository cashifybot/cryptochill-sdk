import t from"axios";import*as i from"crypto";import{Base64 as e}from"js-base64";class s{constructor(t){this.apiKey=void 0,this.apiUrl=void 0,this.profileId=void 0,this.apiSecret=void 0,this.callbackToken=void 0,this.apiKey=t.apiKey,this.apiUrl=t.apiUrl?t.apiUrl:"https://api.cryptochill.com",this.profileId=t.profileId,this.apiSecret=t.apiSecret,this.callbackToken=t.callbackToken}encodeHmac(t,e){return i.createHmac("sha256",t).update(e).digest("hex")}cryptochillApiRequest(i,s,c="GET"){const o="/v1/"+i+"/";s.request=o,s.nonce=(new Date).getTime();const r=JSON.stringify(s),a=e.encode(r),n=this.encodeHmac(this.apiSecret,a);return t({method:c,url:this.apiUrl+o,headers:{"X-CC-KEY":this.apiKey,"X-CC-PAYLOAD":a,"X-CC-SIGNATURE":n}})}}class c extends s{getAccount(){return this.cryptochillApiRequest("account/settings/")}}const o="invoices";class r extends s{listInvoices(t){return this.cryptochillApiRequest(o)}getInvoice(t){return this.cryptochillApiRequest(o+`/${t}`)}createInvoice(t){return this.cryptochillApiRequest(o,t,"POST")}}class a{constructor(t){this.account=void 0,this.invoices=void 0,this.account=new c(t),this.invoices=new r(t)}}export{a as Cryptochill};
